<script src="~/js/signalr/dist/browser/signalr.js"></script>
@*<script src="~/js/signalr/dist/browser/signalr.min.js"></script>*@
<script src="https://unpkg.com/peerjs@1.4.7/dist/peerjs.min.js"></script>

<h1 style="text-align: center">@ViewBag.roomId</h1>
<div video-container></div>

<script>
    var _connection = null;
    var _peerJsObject;
    var _peerJsConnectionId;

    InitializeSignalRConnection();
    JoinRoom();
    InitializeLocalVideoStream();


    function InitializeSignalRConnection()
    {
        _connection = new signalR.HubConnectionBuilder().withUrl("/meeting").build();
    }

    async function JoinRoom()
    {
        _peerJsObject = new Peer();

        _peerJsObject.on('open', id =>{
            OnPeerJsOpen(id);
        });
    }

    async function OnPeerJsOpen(peerJsConnectionId)
    {
        _peerJsConnectionId = peerJsConnectionId;

        await _connection.start();
        await _connection.invoke("JoinRoom", '@ViewBag.roomId', _peerJsConnectionId);

        _connection.on('user-connected', id => {
            console.log(`User connected : ${id}`)
        });
    }

    function InitializeLocalVideoStream() {
        navigator.mediaDevices.getUserMedia({
            audio: true,
            video: true
        }).then(stream => {
            AddVideoStreamToVideoContainer(stream)
        })
    }

    function AddVideoStreamToVideoContainer(stream) {
        var videoContainer = document.querySelector('[video-container]');
        var videoElement = document.createElement('video');
        videoElement.muted = true;

        videoElement.srcObject = stream;
        videoElement.addEventListener('loadedmetadata', () => {
            videoElement.play()
        })

        videoContainer.appendChild(videoElement)
    }
</script>