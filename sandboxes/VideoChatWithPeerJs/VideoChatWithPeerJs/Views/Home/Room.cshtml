<script src="~/js/signalr/dist/browser/signalr.js"></script>
@*<script src="~/js/signalr/dist/browser/signalr.min.js"></script>*@
<script src="https://unpkg.com/peerjs@1.4.7/dist/peerjs.min.js"></script>

<h1 style="text-align: center">@ViewBag.roomId</h1>
<video id="local-video" muted></video>
<video id="remote-video"></video>

<script>
    var _connection = null;
    var _peerJsObject;
    var _peerJsConnectionId;
    var _localVideoStream;

    InitializeSignalRConnection();
    InitializeLocalVideoStream();
    JoinRoom();


    function InitializeSignalRConnection()
    {
        _connection = new signalR.HubConnectionBuilder().withUrl("/meeting").build();
    }

    async function JoinRoom()
    {
        _peerJsObject = new Peer();

        _peerJsObject.on('open', id =>{
            OnPeerJsOpen(id);
        });
    }

    async function OnPeerJsOpen(peerJsConnectionId)
    {
        console.log('Peer Js Opened: ' + peerJsConnectionId);

        _peerJsConnectionId = peerJsConnectionId;

        await _connection.start();
        await _connection.invoke("JoinRoom", '@ViewBag.roomId', _peerJsConnectionId);

        _connection.on('user-connected', id => {
            console.log(`Another user connected : ${id}`);
            CallUser(id);
        });

        _peerJsObject.on("call", (call) => {
            AnswerCall(call);
        });
    }

    function InitializeLocalVideoStream() 
    {
        navigator.mediaDevices.getUserMedia({
            audio: true,
            video: true
        }).then(stream => {
            _localVideoStream = stream;
            var videoElement = document.getElementById("local-video");

            videoElement.srcObject = stream;
            videoElement.addEventListener('loadedmetadata', () => {
                videoElement.play()
            })
        })
    }

    async function CallUser(userId) 
    {
        // make the call
        const call = _peerJsObject.call(userId, _localVideoStream);

        call.on("stream", (stream) => {
            document.getElementById("remote-video").srcObject = stream;
            document.getElementById("remote-video").play();
        });

        call.on("data", (stream) => {
            document.querySelector("#remote-video").srcObject = stream;
        });

        call.on("error", (err) => {
            console.log(err);
        });
        call.on('close', () => {
            console.log('close');
        })

        // save the close function
        //currentCall = call;
    }

    function AnswerCall(call)
    {
        call.answer(_localVideoStream);

        call.on("stream", (remoteStream) => {
            document.getElementById("remote-video").srcObject = remoteStream;
            document.getElementById("remote-video").play();
        });
    }
</script>