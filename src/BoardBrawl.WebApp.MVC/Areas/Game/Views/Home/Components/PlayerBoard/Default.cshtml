@using BoardBrawl.WebApp.MVC.Areas.Game.Models;
@model PlayerBoard

<div class="col-4 h-100">
    @await Html.PartialAsync("_PlayerList", Model)
</div>
<div class="col h-100">
    <video id="focusedPlayerVideo" style="width:100%;" muted></video>
</div>


<script>
    var _localVideoStream;

    $(document).ready(function () {
        InitializeLocalVideoStream();
        SetFocusedVideo();

        $(document).off('click', '.playerVideo');
        $(document).on('click', '.playerVideo', function () {
            OnPlayerVideoClicked(this);
        });
    });

    function PlayerBoard_RefreshPlayerInfo(userId)
    {
        $.ajax({
            url: '/Game/Home/PlayerInfo',
            data: {
                gameId: '@(Model.GameId)',
                userId: userId
            },
            success: function (html) {
                $('#playerInfo' + userId).html(html);
            }
        });
    }

    function InitializeLocalVideoStream() 
    {
        var videoElement = $(".localVideo")[0];

        navigator.mediaDevices.getUserMedia({
            audio: true,
            video: true
        }).then(stream => {
            _localVideoStream = stream;

            videoElement.srcObject = stream;
            $(videoElement).on('loadedmetadata', function() {
                videoElement.play();
            });
        })
        .catch(error => {
            console.error('Error accessing webcam:', error);
            videoElement.style.display = "none";
            var errorImageElement = $(".errorImage")[0];
            errorImageElement.style.display = "block";
        });
    }

    function SetFocusedVideo() {
        var focusedVideoElement = $(".focusedPlayer")[0];
        var focusedPlayerVideo = $('#focusedPlayerVideo')[0];

        if (focusedPlayerVideo.readyState >= focusedPlayerVideo.HAVE_CURRENT_DATA) 
        {
            focusedPlayerVideo.srcObject = focusedVideoElement.srcObject;
            focusedPlayerVideo.play();
        }
        else
        {
            focusedVideoElement.addEventListener('loadedmetadata', function () 
                {
                    focusedPlayerVideo.srcObject = focusedVideoElement.srcObject;
                    focusedPlayerVideo.play();
                });
        }
    }


    function PlayerBoard_LoadRemoteStreams(peer) 
    {
        $(".remoteVideo").each(function () {
            var peerId = $(this).attr("data-peerid");
            
            var call = peer.call(peerId, _localVideoStream);

            call.on("stream", (stream) => {
                this.srcObject = stream;
                this.addEventListener('loadedmetadata', () => {
                    this.play();
                });
            });

            call.on("error", (err) => {
                console.log("Call error:" + err);
            });

            call.on('close', () => {
                Endcall(call);
            })
        });
    }

    function EndCall(call) {
        call.close();
    }

    function OnPlayerVideoClicked(videoElement) {
        var stream = videoElement.srcObject;
        var focusedPlayerVideo = $('#focusedPlayerVideo')[0];

        // Remove the highlight class from all other video elements
        $('.playerVideo').not(videoElement).removeClass('focusedPlayerVideoHighlight');

        // Add the highlight class to the clicked videoElement
        $(videoElement).addClass('focusedPlayerVideoHighlight');

        focusedPlayerVideo.srcObject = stream;
        focusedPlayerVideo.play();
    }

</script>