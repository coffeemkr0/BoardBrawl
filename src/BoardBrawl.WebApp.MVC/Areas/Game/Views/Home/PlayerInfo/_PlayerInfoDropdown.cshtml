@using BoardBrawl.WebApp.MVC.Areas.Game.Models;
@model PlayerInfo;

<style>
    #infectSlider .ui-slider-handle {
        display: none;
    }
</style>

<div class="card">
    <div class="card-header">
        <h5>@Model.PlayerName</h5>
    </div>

    <div class="card-body py-2">
        <div class="pb-2">
            <small class="fst-italic text-muted">Commander(s)</small>
        </div>
        <div id="commanderInputs" class="row text-xs">
            <div class="col px-2">
                @if(Model.IsSelf)
                {
                    <input class="form-control input-commander text-xs" placeholder="Add Commander" data-labelfor="commander1" value="@Model.Commander1?.Name">
                    <input type="hidden" name="Commander1" id="commander1" value="@Model.Commander1Id">
                }
                else
                {
                    <input readonly class="form-control text-xs" value="@Model.Commander1?.Name">
                }
            </div>
            <div class="col px-2">
                @if(Model.IsSelf)
                {
                    <input class="form-control input-commander text-xs" placeholder="Add Commander" data-labelfor="commander2" value="@Model.Commander2?.Name">
                    <input type="hidden" name="Commander2" id="commander2" value="@Model.Commander2Id">
                }
                else
                {
                    <input readonly class="form-control text-xs" value="@Model.Commander2?.Name">
                }
            </div>
        </div>
    </div>

    <div class="card-footer">
        <div class="pb-2">
            <small class="fst-italic text-muted">Damage totals</small>
        </div>

        <div>
            @*TODO: Insert commander damage here*@
        </div>

        <div>
            <div class="card">
                <div class="card-header">
                    <h6>Misc</h6>
                    <div class="d-flex justify-content-between">
                        <div class="pt-2">
                            <small>Infect</small>
                        </div>
                        
                        <div class="d-flex">
                            <div class="btn btn-sm" id="btnDecreaseInfect">
                                <i class="bi bi-file-minus" style="font-size: 1.5rem;"></i>
                            </div>

                            <div class="pt-2">
                                <span>0</span>
                            </div>

                            <div class="btn btn-sm" id="btnIncreaseInfect">
                                <i class="bi bi-file-plus" style="font-size: 1.5rem;"></i>
                            </div>
                            
                        </div>
                    </div>

                    <div class="pe-1">
                        <div id="infectSlider" class=""></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(function () {

        //Auto complete for commander inputs
        var cache = {};
        $(".input-commander").each(function () {
            var input = $(this);
            var hiddenInputId = input.data('labelfor');

            input.autocomplete({
                minLength: 2,
                source: function (request, response) {
                    var term = request.term;
                    if (term in cache) {
                        response(cache[term]);
                        return;
                    }

                    $.getJSON("/Game/Home/SearchCards", { searchString: term }, function (data, status, xhr) {
                        cache[term] = data;
                        response(data);
                    });
                },
                focus: function (event, ui) {
                    input.val(ui.item.label);
                    return false;
                },
                select: function (event, ui) {
                    input.val(ui.item.label);
                    $("#" + hiddenInputId).val(ui.item.value).trigger('change');
                    return false;
                },
                appendTo: '#commanderInputs'
            });
        });

        $('#commander1').on('change', function () {
            var newValue = $(this).val();

            PlayerInfo_CommanderChanged(1, newValue);
        });

        $('#commander2').on('change', function () {
            var newValue = $(this).val();

            PlayerInfo_CommanderChanged(2, newValue);
        });

        var slider = $("#infectSlider").slider({
            range: "max",
            min: 0,
            max: 10,
            value: 0  
        });
        
        // Disable dragging on the slider handle
        slider.slider("option", "disabled", true);

        // Button click event handlers
        $("#btnDecreaseInfect").on("click", function () {
            var value = slider.slider("value");
            slider.slider("value", value - 1);
        });

        $("#btnIncreaseInfect").on("click", function () {
            var value = slider.slider("value");
            slider.slider("value", value + 1);
        });
    });
</script>