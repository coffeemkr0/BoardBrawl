@using SpellTable2.WebApp.MVC.Areas.Game.Models;
@model PlayerList

<h1>Players</h1>

@foreach (var playerInfo in Model.Players)
{
    <div id="playerInfo@(playerInfo.UserId)">@await Component.InvokeAsync("PlayerInfo", playerInfo)</div>
    @if(playerInfo.UserId == Model.UserId)
    {
        <video class="selfVideo" muted></video>
    }
    else
    {
        <video class="playerVideo" data-userid="@playerInfo.UserId" data-peerid="@playerInfo.PeerId" muted></video>
    }


    <script>

        $(document).ready(function () {
            $(document).off('click', '#btnDecreaseLife@(playerInfo.UserId)')

            $(document).on('click', '#btnDecreaseLife@(playerInfo.UserId)', function () {
                $.ajax({
                    url: '/Game/Home/DecreaseLifeTotal',
                    data: {
                        gameId: '@(Model.GameId)',
                        userId: '@(playerInfo.UserId)',
                        amount: 1
                    },
                    success: function (html) {
                        $('#playerInfo@(playerInfo.UserId)').html(html);
                    }
                });
            });

            $(document).off('click', '#btnIncreaseLife@(playerInfo.UserId)')

            $(document).on('click', '#btnIncreaseLife@(playerInfo.UserId)', function () {
                $.ajax({
                    url: '/Game/Home/IncreaseLifeTotal',
                    data: {
                        gameId: '@(Model.GameId)',
                        userId: '@(playerInfo.UserId)',
                        amount: 1
                    },
                    success: function (html) {
                        $('#playerInfo@(playerInfo.UserId)').html(html);
                    }
                });
            });
        });
    </script>
}

<script>
    var _localVideoStream;

    InitializeLocalVideoStream();

    function PlayerList_RefreshPlayerInfo(userId)
    {
        $.ajax({
            url: '/Game/Home/PlayerInfo',
            data: {
                gameId: '@(Model.GameId)',
                userId: userId
            },
            success: function (html) {
                $('#playerInfo' + userId).html(html);
            }
        });
    }

    function InitializeLocalVideoStream() 
    {
        navigator.mediaDevices.getUserMedia({
            audio: true,
            video: true
        }).then(stream => {
            _localVideoStream = stream;
            var videoElement = $(".playerVideo");

            videoElement.srcObject = stream;
            videoElement.addEventListener('loadedmetadata', () => {
                videoElement.play()
            })
        })
    }

    function PlayerList_LoadRemoteStreams(peer) 
    {
        $(".playerVideo").each(function() {
            var peerId = $(this).attr("data-peerid");
            
            var call = peer.call(peerId, _localVideoStream);

            call.on("stream", (stream) => {
                this.srcObject = remoteStream;
                this.addEventListener('loadedmetadata', () => {
                    this.play();
                });
            });

            call.on("data", (stream) => {
                console.log('call on data');
            });

            call.on("error", (err) => {
                console.log("Call error:" + err);
            });

            call.on('close', () => {
                Endcall(call);
            })
        });
    }

    function EndCall(call) {
        console.log('Ending call');
        call.close();
    }
</script>