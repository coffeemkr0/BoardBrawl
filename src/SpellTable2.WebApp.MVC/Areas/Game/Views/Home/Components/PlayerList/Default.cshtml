@using SpellTable2.WebApp.MVC.Areas.Game.Models;
@model PlayerList

<h1>Players</h1>

@foreach (var playerInfo in Model.Players)
{
    <div id="playerInfo@(playerInfo.UserId)">@await Component.InvokeAsync("PlayerInfo", playerInfo)</div>
    <video id="playerVideo@(playerInfo.UserId)" muted></video>

    <script>
        $(document).ready(function () {
            $(document).off('click', '#btnDecreaseLife@(playerInfo.UserId)')

            $(document).on('click', '#btnDecreaseLife@(playerInfo.UserId)', function () {
                $.ajax({
                    url: '/Game/Home/DecreaseLifeTotal',
                    data: {
                        gameId: '@(Model.GameId)',
                        userId: '@(playerInfo.UserId)',
                        amount: 1
                    },
                    success: function (html) {
                        $('#playerInfo@(playerInfo.UserId)').html(html);
                    }
                });
            });

            $(document).off('click', '#btnIncreaseLife@(playerInfo.UserId)')

            $(document).on('click', '#btnIncreaseLife@(playerInfo.UserId)', function () {
                $.ajax({
                    url: '/Game/Home/IncreaseLifeTotal',
                    data: {
                        gameId: '@(Model.GameId)',
                        userId: '@(playerInfo.UserId)',
                        amount: 1
                    },
                    success: function (html) {
                        $('#playerInfo@(playerInfo.UserId)').html(html);
                    }
                });
            });
        });
    </script>
}

<script>
    var _localVideoStream;

    InitializeLocalVideoStream();

    function PlayerList_RefreshPlayerInfo(userId)
    {
        $.ajax({
            url: '/Game/Home/PlayerInfo',
            data: {
                gameId: '@(Model.GameId)',
                userId: userId
            },
            success: function (html) {
                $('#playerInfo' + userId).html(html);
            }
        });
    }

    function InitializeLocalVideoStream() 
    {
        navigator.mediaDevices.getUserMedia({
            audio: true,
            video: true
        }).then(stream => {
            _localVideoStream = stream;
            var videoElement = document.getElementById("playerVideo@(Model.UserId)");

            videoElement.srcObject = stream;
            videoElement.addEventListener('loadedmetadata', () => {
                videoElement.play()
            })
        })
    }
</script>